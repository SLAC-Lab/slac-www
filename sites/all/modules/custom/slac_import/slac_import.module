<?php

/**
 * Implements hook_feeds_processor_targets_alter().
 */
function slac_import_feeds_processor_targets_alter(&$targets, $entity_type, $bundle_name) {
  foreach (field_info_instances($entity_type, $bundle_name) as $name => $instance) {
    $info = field_info_field($name);

    if ($info['type'] == 'image') {
      $targets[$name . ':image_field_caption'] = array(
        'name' => t('@label: Description', array('@label' => $instance['label'])),
        'callback' => 'slac_import_feeds_set_target',
        'description' => t('The description tag of the @label field.', array('@label' => $instance['label'])),
        'real_target' => $name,
      );
    }
  }
}

/**
 * Implements hook_feeds_set_target().
 */
function slac_import_feeds_set_target($source, &$entity, $target, $value) {
  if (empty($value)) {
    return;
  }

  // Make sure $value is an array of objects of type FeedsEnclosure.
  if (!is_array($value)) {
    $value = array($value);
  }

  list($field_name, $sub_field) = explode(':', $target);

  // Populate entity.
  $field = isset($entity->$field_name) ? $entity->$field_name : array(LANGUAGE_NONE => array());

  $delta = 0;
  foreach ($value as $v) {
    $field[LANGUAGE_NONE][$delta][$sub_field]['value'] = $v;
    $delta++;
  }

  $entity->$field_name = $field;
}

/**
 * Implements hook_ctools_plugin_api().
 */
function slac_import_ctools_plugin_api($module, $api) {
  if ($module == 'feeds' && $api == 'feeds_importer_default') {
    return array('version' => 1);
  }
  if ($module == 'feeds_tamper' && $api == 'feeds_tamper_default') {
    return array('version' => 2);
  }
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function slac_import_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner == 'feeds_tamper' && $plugin_type == 'plugins') {
    return 'plugins/tamper/';
  }
}
