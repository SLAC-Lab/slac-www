<?php

/**
 * Implements hook_entity_info_alter().
 */
function slac_public_lectures_entity_info_alter(&$entity_info) {
  $entity_info['fieldable_panels_pane']['bundles']['scheduled_lecture'] = array(
    'label' => t('Scheduled lecture'),
    'pane category' => t('SLAC'),
    'pane top level' => FALSE, // set to true to make this show as a top level icon
    'admin' => array(
      'path' => 'admin/structure/fieldable-panels-panes/manage/%fieldable_panels_panes_type',
      'bundle argument' => 4,
      // Note that this has all _ replaced with - from the bundle name.
      'real path' => 'admin/structure/fieldable-panels-panes/manage/scheduled-lecture',
      'access arguments' => array('administer fieldable panels panes'),
    ),
  );
}

function slac_public_lectures_preprocess_views_view_table(&$vars) {
  $css_class = '';
  if(isset($_GET['sort'])){
    $css_class = ' order-' . $_GET['sort'];
  }
  foreach ($vars['header_classes'] as $key => $value) {
    if (strpos($value, 'active')) {
      $vars['header_classes'][$key] = $value . $css_class;
    }
  }
}

/**
 * Implements hook_ctools_plugin_directory().
 *
 * It simply tells panels where to look for the .inc file that
 * defines various args, contexts and content_types.
 */
function slac_public_lectures_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && !empty($plugin)) {
    return "plugins/$plugin";
  }
}

function slac_public_lectures_entity_view_alter(&$build) {
  if ($build['#entity_type'] != 'fieldable_panels_pane' || $build['#bundle'] != 'scheduled_lecture') {
    return;
  }

  $fpp = $build['#fieldable_panels_pane'];

  $date_timestamp = strtotime($fpp->field_fpp_sched_lect_date[LANGUAGE_NONE][0]['value']);

  if ($date_timestamp > REQUEST_TIME) {
    $next_lecture_phrase = $fpp->field_fpp_sched_lect_dateav_text[LANGUAGE_NONE][0]['safe_value'];
    $next_lecture_phrase = str_replace('[lecture-date]', format_date($date_timestamp, 'custom', 'F j, Y'), $next_lecture_phrase);
  }
  else {
    $next_lecture_phrase = $fpp->field_fpp_sched_lect_nodate_text[LANGUAGE_NONE][0]['safe_value'];
  }

  $markup = &$build['field_fpp_sched_lect_body'][0]['#markup'];
  $markup = str_replace('[lecture-available-phrase]', $next_lecture_phrase, $markup);
}