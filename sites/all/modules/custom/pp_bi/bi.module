<?php
/**
 * @file
 */

/**
 * Implementation of hook_menu().
 */
function bi_menu() {
  $items = array();

  $type = 'bi';
  $types = bean_get_types();
  $type = $types[$type];

  $items['bi/block/%'] = array(
    'title' => 'Form to add/edit a block',
    'page callback' => 'bi_block_page',
    'page arguments' => array(2),
    'access arguments' => array('use block insert'),
    'description' => 'Callback to create or edit a block',
    'theme callback' => 'media_dialog_get_theme_name',
    'file' => 'bi.pages.inc',
  );

  $items['bi/browser'] = array(
    'title' => 'Block insert browser',
    'description' => 'Browser to select the type of the block to insert',
    'page callback' => 'bi_browser',
    'access arguments' => array('use block insert'),
    'type' => MENU_CALLBACK,
    'theme callback' => 'media_dialog_get_theme_name',
    'file' => 'bi.pages.inc',
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function bi_permission() {
  return array(
    'use block insert' => array(
      'title' => t('Use blocks insert functionality'),
      'description' => t('Use blocks insert functionality'),
    ),
  );
}

/**
 * Implements hook_wysiwyg_include_directory().
 */
function bi_wysiwyg_include_directory($type) {
  switch ($type) {
    case 'plugins':
      return $type;
  }
}

/**
 * Implements hook_bean_types_api_info().
 */
function bi_bean_types_api_info() {
  return array('api' => 4);
}

/**
 * Implements hook_bean_types().
 */
function bi_bean_types() {
  $plugins = array();
  $plugin_path = drupal_get_path('module', 'bi') . '/plugins/bean';
  $plugins['bi'] = array(
    'label' => t('PP Block'),
    'description' => t('Block created by PP Block Insert module.'),
    'handler' => array(
      'class' => 'BlockBean',
      'parent' => 'bean',
    ),
    'path' => $plugin_path,
    'file' => 'bi.block.inc',
  );
  $plugins['bi_2'] = array(
    'label' => t('PP Block 2'),
    'description' => t('Block created by Bean module.'),
    'handler' => array(
      'class' => 'BlockBean',
      'parent' => 'bean',
    ),
    'path' => $plugin_path,
    'file' => 'bi.block.inc',
  );
  return $plugins;
}

/**
 * Implements hook_theme().
 */
function bi_theme() {
  $items = array();
  $items['bi_settings'] = array(
    'arguments' => array(
      'records_shown' => NULL,
    ),
    'file' => 'bi.theme.inc',
  );
  $items['bi_more_link'] = array(
    'arguments' => array(
      'text' => NULL,
      'path'  => NULL,
    ),
    'file' => 'bi.theme.inc',
  );
  return $items;
}

/**
 * Implements hook_library().
 */
function bi_library() {
  $libraries = array();

  $libraries['bi_browser'] = array(
    'title' => 'Block Insert popup libraries',
    'js' => array(
      drupal_get_path('module', 'bi') . '/js/bi.popups.js' => array('group' => JS_DEFAULT),
    ),
    'dependencies' => array(
      array('media', 'media_base'),
      array('system', 'ui.resizable'),
      array('system', 'ui.draggable'),
      array('system', 'ui.dialog'),
    ),
    'version' => '1.0',
  );

  return $libraries;
}

/**
 * Default settings of the javascripts.
 */
function bi_browser_js() {
  $settings = array(
    'browserUrl' => url('bi/browser',
      array('query' => array('render' => 'block_types'))),
    'styleSelectorUrl' => url('media/-media_id-/format-form',
      array('query' => array('render' => 'media-popup'))),
  );

  $js = array(
    'library' => array(
      array('bi', 'bi_browser'),
    ),
    'js' => array(
      array(
       'data' => array('bi' => $settings),
       'type' => 'setting',
      ),
    ),
  );
  return $js;
}

/**
 * Implements hook_admin_paths().
 */
function bi_admin_paths() {
  $paths['bi/*'] = TRUE;
  return $paths;
}
